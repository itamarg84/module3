pipeline {
  environment {
    ecrurl = "https://${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com"
    ecrcredentials = "ecr:${AWS_DEFAULT_REGION}:${JENK_ID}"
    region = "${AWS_DEFAULT_REGION}"
    jenkins_id = "${JENK_ID}"
    service_name = "${SERVICE_NAME}"
    cluster_name = "${CLUSTER_NAME}"
    image_name   = "${IMAGE_NAME}"
    build_num    = "${BUILD_NUMBER}"
  } 
  agent any
  stages {
    stage ('build') {
      steps {
        sh 'printenv'
        
      } 
    }   
    
    
    stage ('param') {
    
      
       withAws([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: '0535d321-41ee-44c1-aa90-71c05ec9c3f9']]) {
         def AWS_ACCOUNT_ID = sh (script: 'aws sts get-caller-identity --query “Account” --output text',returnStdout: true).trim()
           }}
    
    
    
    
    stage ('publish ECR') {
      steps {
          script {
              docker.withRegistry(ecrurl, ecrcredentials) {
                def myImage = docker.build(image_name)
                  myImage.push('latest')
                
     
      
    stage('Remove Unused docker image - main') {
       
        sh "docker rmi -f 'latest'"
         }
         
         
    stage ('Invoke_itamar_g2') {
      
                build job: 'itamar_g2'
         }
         
         
         
         }
        }
       }
      }
     }
    }
